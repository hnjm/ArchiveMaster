<UserControl
    x:Class="ArchiveMaster.Views.MainView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:FzLib.Avalonia.Behaviors;assembly=FzLib.Avalonia"
    xmlns:cfg="using:ArchiveMaster.Configs"
    xmlns:ctrl="using:FzLib.Avalonia.Controls"
    xmlns:cvm="clr-namespace:ArchiveMaster.ViewModels;assembly=ArchiveMaster.Core"
    xmlns:cvt="using:ArchiveMaster.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gb="using:GroupBox.Avalonia.Controls"
    xmlns:local="clr-namespace:ArchiveMaster.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ArchiveMaster.Models;assembly=ArchiveMaster.Core"
    xmlns:sys="using:System"
    xmlns:v="using:ArchiveMaster.Views"
    xmlns:vm="clr-namespace:ArchiveMaster.ViewModels"
    x:Name="root"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:DataType="vm:MainViewModel"
    Background="{DynamicResource Background1}"
    mc:Ignorable="d">
    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <sys:Double x:Key="BoxWidth">200</sys:Double>
        <sys:Double x:Key="BoxHeight">280</sys:Double>
        <sys:Boolean x:Key="ShowDescription">True</sys:Boolean>
    </UserControl.Resources>

    <Grid Margin="8">
        <Panel
            x:Name="mainMenu"
            Classes.hidden="{Binding IsToolOpened}"
            IsVisible="{Binding !IsToolOpened}">
            <Panel.Styles>
                <Style Selector="Panel">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Transitions">
                        <Transitions>
                            <DoubleTransition
                                Easing="CubicEaseInOut"
                                Property="Opacity"
                                Duration="0:0:0.3" />
                        </Transitions>
                    </Setter>
                    <Style Selector="^.hidden">
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Setter Property="Opacity" Value="0" />
                    </Style>
                </Style>

            </Panel.Styles>
            <ScrollViewer
                x:Name="scr"
                b:SmoothScrollBehavior.IsEnabled="True"
                BringIntoViewOnFocusChange="{Binding ScrollViewBringIntoViewOnFocusChange}"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto">
                <Interaction.Behaviors>
                    <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.KeyDownEvent}">
                        <InvokeCommandAction Command="{Binding ScrollViewKeyDownCommand}" />
                    </RoutedEventTriggerBehavior>
                </Interaction.Behaviors>
                <Panel>
                    <ItemsControl ItemsSource="{Binding PanelGroups}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel
                                    Orientation="Vertical"
                                    Spacing="16" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <Grid ColumnDefinitions="*,Auto,*">
                                        <TextBlock
                                            Grid.Column="1"
                                            FontSize="20"
                                            FontWeight="Bold"
                                            Text="{Binding GroupName}" />
                                        <Button
                                            Grid.Column="2"
                                            Margin="8,0,0,0"
                                            Padding="4"
                                            HorizontalAlignment="Left"
                                            Background="Transparent"
                                            IsVisible="{Binding MenuItems, Converter={x:Static cvt:Converters.CountGreaterThanZero}}">
                                            <TextBlock
                                                FontFamily="{StaticResource IconFont}"
                                                FontSize="16"
                                                Text="{StaticResource More}" />
                                            <Button.Flyout>
                                                <MenuFlyout ItemsSource="{Binding MenuItems}">
                                                    <MenuFlyout.ItemContainerTheme>
                                                        <ControlTheme
                                                            x:DataType="cvm:ModuleMenuItemInfo"
                                                            BasedOn="{StaticResource {x:Type MenuItem}}"
                                                            TargetType="MenuItem">
                                                            <Setter Property="Header" Value="{Binding Header}" />
                                                            <Setter Property="Command" Value="{Binding Command}" />
                                                        </ControlTheme>
                                                    </MenuFlyout.ItemContainerTheme>
                                                </MenuFlyout>
                                            </Button.Flyout>
                                        </Button>
                                    </Grid>
                                    <Border
                                        MaxWidth="240"
                                        BorderBrush="{DynamicResource Foreground3}"
                                        BorderThickness="0,2,0,0" />
                                    <ItemsControl ItemsSource="{Binding Panels}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <local:ExtendedWrapPanel
                                                    HorizontalAlignment="Center"
                                                    HorizontalContentAlignment="Center" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <local:ToolItemBox
                                                    x:Name="tib"
                                                    Title="{Binding Title}"
                                                    Width="{DynamicResource BoxWidth}"
                                                    Height="{DynamicResource BoxHeight}"
                                                    Description="{Binding Description}"
                                                    Focusable="{Binding !#root.((vm:MainViewModel)DataContext).IsToolOpened}"
                                                    Icon="{Binding IconUri}"
                                                    KeyDown="ToolItem_OnKeyDown"
                                                    ShowDescription="{DynamicResource ShowDescription}">
                                                    <Interaction.Behaviors>
                                                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.TappedEvent}">
                                                            <InvokeCommandAction
                                                                Command="{Binding #root.((vm:MainViewModel)DataContext).EnterToolCommand}"
                                                                CommandParameter="{Binding .}" />
                                                        </RoutedEventTriggerBehavior>
                                                    </Interaction.Behaviors>
                                                </local:ToolItemBox>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Panel>
            </ScrollViewer>
            <Button
                Padding="6"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="Transparent"
                Command="{Binding OpenSettingDialogCommand}"
                Content="{StaticResource Settings}"
                FontFamily="{StaticResource IconFont}"
                FontSize="18" />
        </Panel>

        <ContentControl
            x:Name="mainContent"
            Classes.hidden="{Binding !IsToolOpened}"
            Content="{Binding MainContent}"
            Focusable="{Binding IsToolOpened}">
            <ContentControl.Styles>
                <Style Selector="ContentControl">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Transitions">
                        <Transitions>
                            <DoubleTransition
                                Easing="CubicEaseInOut"
                                Property="Opacity"
                                Duration="0:0:0.3" />
                        </Transitions>
                    </Setter>
                    <Style Selector="^.hidden">
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Setter Property="Opacity" Value="0" />
                    </Style>
                </Style>
            </ContentControl.Styles>
        </ContentControl>

        <ctrl:ProgressRingOverlay IsActive="{Binding IsProgressRingOverlayActive}" />
    </Grid>
</UserControl>