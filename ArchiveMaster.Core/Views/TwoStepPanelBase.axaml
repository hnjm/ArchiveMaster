<local:MultiPresetPanelBase
    x:Class="ArchiveMaster.Views.TwoStepPanelBase"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:FzLib.Avalonia.Behaviors;assembly=FzLib.Avalonia"
    xmlns:cvt="clr-namespace:ArchiveMaster.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:ArchiveMaster.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="using:System"
    xmlns:vm="using:ArchiveMaster.ViewModels"
    x:Name="Root"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <local:MultiPresetPanelBase.Resources>
        <sys:Boolean x:Key="ShowSingleLine">True</sys:Boolean>
        <sys:Boolean x:Key="ShowTwoLines">False</sys:Boolean>
        <sys:Double x:Key="ConfigMaxHeight">300</sys:Double>
    </local:MultiPresetPanelBase.Resources>
    <local:PanelBase.PanelContent>
        <Grid
            Margin="8"
            RowDefinitions="Auto,8,Auto,8,*,24,Auto">

            <ScrollViewer
                MaxHeight="{DynamicResource ConfigMaxHeight}"
                b:SmoothScrollBehavior.IsEnabled="True"
                HorizontalScrollBarVisibility="Disabled"
                IsEnabled="{Binding CanInitialize}"
                VerticalScrollBarVisibility="Auto">
                <ContentControl Content="{Binding #Root.ConfigsContent}" />
            </ScrollViewer>

            <Border
                Grid.Row="2"
                Margin="32,16"
                BorderBrush="{DynamicResource Background3}"
                BorderThickness="0,2,0,0"
                IsVisible="{Binding EnableInitialize}" />


            <ContentControl
                Grid.Row="4"
                Content="{Binding ElementName=Root, Path=ResultsContent}" />

            <Grid
                Grid.Row="6"
                ColumnDefinitions="4*,8,*,16,Auto,8,Auto,8,Auto,8,Auto"
                IsEnabled="{Binding Config, Converter={x:Static cvt:Converters.IsNotNull}}"
                IsVisible="{DynamicResource ShowSingleLine}">


                <TextBlock
                    Text="{Binding Message}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip.Tip="{Binding Message}" />

                <ProgressBar
                    Grid.Column="2"
                    Height="24"
                    IsIndeterminate="{Binding ProgressIndeterminate}"
                    IsVisible="{Binding IsWorking}"
                    Maximum="1"
                    Minimum="0"
                    ProgressTextFormat="{}{1:0.0}%"
                    ShowProgressText="{Binding !ProgressIndeterminate}"
                    Value="{Binding Progress}">
                    <ProgressBar.Styles>
                        <Style Selector="ProgressBar:horizontal">
                            <Setter Property="MinWidth" Value="72" />
                        </Style>
                    </ProgressBar.Styles>
                </ProgressBar>
                <Button
                    Grid.Column="4"
                    Classes="Long Primary"
                    Command="{Binding InitializeCommand}"
                    Content="{Binding #Root.InitializeButtonContent}"
                    IsVisible="{Binding EnableInitialize}" />
                <Button
                    Grid.Column="6"
                    Classes="Long Primary"
                    Command="{Binding ExecuteCommand}"
                    Content="{Binding #Root.ExecuteButtonContent}" />
                <Button
                    Grid.Column="8"
                    Classes="Middle"
                    Command="{Binding CancelCommand}"
                    Content="{Binding #Root.StopButtonContent}" />
                <Button
                    Grid.Column="10"
                    Classes="Middle"
                    Command="{Binding ResetCommand}"
                    Content="{Binding #Root.ResetButtonContent}" />
            </Grid>

            <Grid
                Grid.Row="6"
                ColumnDefinitions="*,16,Auto,8,Auto"
                IsEnabled="{Binding Config, Converter={x:Static cvt:Converters.IsNotNull}}"
                IsVisible="{DynamicResource ShowTwoLines}"
                RowDefinitions="Auto,8,Auto">


                <TextBlock
                    Text="{Binding Message}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip.Tip="{Binding Message}" />

                <ProgressBar
                    Grid.Row="2"
                    Height="24"
                    IsIndeterminate="{Binding ProgressIndeterminate}"
                    IsVisible="{Binding IsWorking}"
                    Maximum="1"
                    Minimum="0"
                    ProgressTextFormat="{}{1:0.0}%"
                    ShowProgressText="{Binding !ProgressIndeterminate}"
                    Value="{Binding Progress}">
                    <ProgressBar.Styles>
                        <Style Selector="ProgressBar:horizontal">
                            <Setter Property="MinWidth" Value="72" />
                        </Style>
                    </ProgressBar.Styles>
                </ProgressBar>

                <Button
                    Grid.Column="2"
                    Classes="Long Primary"
                    Command="{Binding InitializeCommand}"
                    Content="{Binding #Root.InitializeButtonContent}"
                    IsVisible="{Binding EnableInitialize}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="2"
                    Classes="Long Primary"
                    Command="{Binding ExecuteCommand}"
                    Content="{Binding #Root.ExecuteButtonContent}" />
                <Button
                    Grid.Column="4"
                    Classes="Middle"
                    Command="{Binding CancelCommand}"
                    Content="{Binding #Root.StopButtonContent}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="4"
                    Classes="Middle"
                    Command="{Binding ResetCommand}"
                    Content="{Binding #Root.ResetButtonContent}" />
            </Grid>

        </Grid>
    </local:PanelBase.PanelContent>
</local:MultiPresetPanelBase>